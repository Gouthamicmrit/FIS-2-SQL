select * from tblemployee

insert into tblemployee values(109,'Neha','Female',12500,4,1234567)

select count(deptid) from tblemployee  --excludes null
select count(*)deptid from tblemployee  -- includes null

select distinct(deptid) from tblemployee --excludes duplicates

select distinct(salary) from tblemployee

--find all employees who earn more than the average salary of all employees
select avg(salary) from tblemployee

select * from tblemployee
where salary >12361   -- legal query

select * from tblemployee
where salary >avg(salary)  --illegal as functions cannot be used in the RHS of the where clause

--pattern matching
--wild card characters used with like operator
--1. % (substitutes 0,1 or more characters)
--2. _ (substitutes exactly one character)
--3. [] (substitutes one character in the given range -either or)
--4. ^ (negation, not in the given list/range)

select * from tblemployee where empname like 'p%'
select * from tblemployee where empname like 'p%a'

select * from tblemployee where empname like '_a%'

select * from tblemployee where empname like '%a%'
select * from tblemployee where empname like '%r'
select * from tblemployee where empname like 'p_[oyr]%'

select * from tblemployee where phone like '%1'
select * from tblemployee where empname like '__h%'
select * from tblemployee where empname like 'a[sne]%'

select * from tblemployee where empname like '%[^h]%'
select * from tblemployee where empname like '__[^h]%'

select * from tblEmployee where empname like '[^ap]%'

select Empid, Salary from tblemployee where empname like '[^ap]%'

sp_help tblemployee

select * from tblEmployee
order by empname desc

select * from tblEmployee order by gender ,salary desc

--can sort the data on multiple columns
--can sort on an alias column
--can sort on a column that is not included in the select list

select Empid,Empname from tblEmployee order by salary desc

select Empid,Empname,Salary as EmployeeSalary from tblemployee
order by EmployeeSalary

--understanding indexes
drop table sampletable
create table sampletable
(sampleid int,
sname varchar(30),
age int,
city varchar(25))

sp_help sampletable

create index idxsid on sampletable(sampleid)

insert into sampletable values(13,'hh',21,'Mumbai'),(11,'bb',23,'Bangalore'),
(15,'cc',22,'Chennai'),(12,'dd',24,'Delhi'),(10,'ee',25,'Pune')

select * from sampletable

--dropping an index
drop index sampletable.idxsid

create clustered index idxclsid on sampletable(sampleid)
drop index sampletable.idxclsid

create unique clustered index idxcls_sid on sampletable(sampleid)
drop index sampletable.idxcls_sid
delete from sampletable

drop index sampletable.idxcity
create nonclustered index idxcity on sampletable(city)

select * from sampletable where city ='Ahmedabad'

--grouping/categorization of tuples in a table using group by clause
select avg(salary) from tblemployee
--department wise average salary

select * from tblEmployee order by deptid
select deptid as DepartmentNo,avg(salary) AverageSalary from tblemployee
group by deptid
--rules
--group by can be applied to multiple columns
--cannot group by an alias column
--all columns in the select list other than the aggregates have to be included in the group by clause

select Deptid,avg(salary) AverageSalary, sum(salary) TotalSalary  from tblemployee
group by deptid

--list dept wise maximum salary
select deptid,salary from tblemployee order by deptid
select deptid, max(salary) from tblemployee group by deptid

--list the no.of male and female employees
select gender,count(gender) from tblemployee
group by gender
order by gender desc

--find all departments that have average salary > 12350
select deptid,avg(salary) as Average from tblemployee
where deptid is not null
group by deptid
having avg(salary)>12350
order by Average desc

--joins
--Equi Join/Natural Join/Inner Join
--Cross Join  - cartesian product
--Self Join  - a table joining with itself
--Outer Join
     -- left outer
	 -- right outer
	 -- full outer
	 select * from tblDepartment
	 select * from tblEmployee
--inner joins/equi
select * from tblemployee, tblDepartment where tblEmployee.Deptid=tblDepartment.Deptid

select * from tblemployee t1 inner join tblDepartment t2 on t1.Deptid=t2.deptid 
--cross join
select * from tblEmployee,tblDepartment

select * from tblDepartment cross join tblEmployee

--self Joins
